edition = "2023";

package gophkeeper.proto;

import "google/protobuf/timestamp.proto";
import "google/protobuf/go_features.proto";
import "google/protobuf/empty.proto";
option features.(pb.go).api_level = API_OPAQUE;

option go_package = "github.com/ryabkov82/gophkeeper/internal/pkg/proto";

// Запрос на регистрацию
message RegisterRequest {
  string login = 1;
  string password = 2;
}

// Ответ на регистрацию
message RegisterResponse {
  string message = 1;
}

// Запрос на вход
message LoginRequest {
  string login = 1;
  string password = 2;
}

// Ответ на вход
message LoginResponse {
  string access_token = 1;
  bytes salt = 2; // соль для генерации ключа шифрования
}

// gRPC-сервис аутентификации
service AuthService {
  rpc Register(RegisterRequest) returns (RegisterResponse);
  rpc Login(LoginRequest) returns (LoginResponse);
}

// Сообщения для Credential
message Credential {
    string id = 1;
    string user_id = 2;
    string title = 3;
    string login = 4;
    string password = 5;
    string metadata = 6;
    google.protobuf.Timestamp created_at = 7;
    google.protobuf.Timestamp updated_at = 8;
}

message CreateCredentialRequest {
    Credential credential = 1;
}

message CreateCredentialResponse {
    Credential credential = 1;
}

message GetCredentialByIDRequest {
    string id = 1;
}

message GetCredentialByIDResponse {
    Credential credential = 1;
}

message GetCredentialsResponse {
    repeated Credential credentials = 1;
}

message UpdateCredentialRequest {
    Credential credential = 1;
}

message UpdateCredentialResponse {
    Credential credential = 1;
}

message DeleteCredentialRequest {
    string id = 1;
}

message DeleteCredentialResponse {
    bool success = 1;
}

// Сообщения для BankCard
message BankCard {
    string id = 1;
    string user_id = 2;
    string title = 3;
    string cardholder_name = 4;
    string card_number = 5;
    string expiry_date = 6;
    string cvv = 7;
    string metadata = 8;
    google.protobuf.Timestamp created_at = 9;
    google.protobuf.Timestamp updated_at = 10;
}

message CreateBankCardRequest {
    BankCard bank_card = 1;
}

message CreateBankCardResponse {
    BankCard bank_card = 1;
}

message GetBankCardByIDRequest {
    string id = 1;
}

message GetBankCardByIDResponse {
    BankCard bank_card = 1;
}

message GetBankCardsResponse {
    repeated BankCard bank_cards = 1;
}

message UpdateBankCardRequest {
    BankCard bank_card = 1;
}

message UpdateBankCardResponse {
    BankCard bank_card = 1;
}

message DeleteBankCardRequest {
    string id = 1;
}

message DeleteBankCardResponse {
    bool success = 1;
}

// Сервис для работы с Credential
service CredentialService {
    rpc CreateCredential(CreateCredentialRequest) returns (CreateCredentialResponse);
    rpc GetCredentialByID(GetCredentialByIDRequest) returns (GetCredentialByIDResponse);
    rpc GetCredentials(google.protobuf.Empty) returns (GetCredentialsResponse);
    rpc UpdateCredential(UpdateCredentialRequest) returns (UpdateCredentialResponse);
    rpc DeleteCredential(DeleteCredentialRequest) returns (DeleteCredentialResponse);
}

// Сервис для работы с BankCard
service BankCardService {
    rpc CreateBankCard(CreateBankCardRequest) returns (CreateBankCardResponse);
    rpc GetBankCardByID(GetBankCardByIDRequest) returns (GetBankCardByIDResponse);
    rpc GetBankCards(google.protobuf.Empty) returns (GetBankCardsResponse);
    rpc UpdateBankCard(UpdateBankCardRequest) returns (UpdateBankCardResponse);
    rpc DeleteBankCard(DeleteBankCardRequest) returns (DeleteBankCardResponse);
}