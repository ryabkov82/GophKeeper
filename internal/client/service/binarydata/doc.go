// Package binarydata предоставляет функционал работы с бинарными данными (файлами)
// на стороне клиента GophKeeper поверх gRPC.
//
// # Назначение
//
// Пакет инкапсулирует сценарии загрузки/скачивания содержимого и CRUD-операции
// с метаинформацией о файлах. Внутри используется потоковый gRPC-клиент
// (client-stream для Upload, server-stream для Download) и структурированное
// логирование через zap.
//
// Основные возможности
//
//   - Upload: потоковая загрузка содержимого файла на сервер.
//     Сначала отправляются метаданные (BinaryDataInfo), затем чанки байтов.
//     В случае ошибки stream.Send() корректно запрашивается финальный статус
//     через CloseAndRecv(), чтобы получить код/сообщение сервера.
//   - Download: потоковое скачивание содержимого; наружу возвращается io.ReadCloser,
//     реализованный через io.Pipe — можно читать как обычный поток.
//   - CRUD по метаданным: CreateInfo, UpdateInfo, GetInfo, List, Delete.
//   - Инъекция gRPC-клиента через SetClient — удобно для тестов и моков.
//   - Подробное логирование всех операций (debug/info).
//
// Типы
//
//   - BinaryDataManagerIface — интерфейс менеджера бинарных данных; упрощает мокирование,
//     отделяет использование от реализации.
//   - BinaryDataManager — реализация интерфейса: держит zap-логгер и gRPC-клиент
//     pb.BinaryDataServiceClient, выполняет все описанные операции.
package binarydata
